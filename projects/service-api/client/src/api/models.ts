// *********** *********** ***********
// Do not modify, this file is auto-generated by the scala back-end server.
// If changes are needed to this file, modify locally, then submit an issue including your desired changes.
// *********** *********** *********** \\
// DO NOT EDIT: generated; file by scala-tsi
export type FlashcardTypeID = string;
export interface AnswerChoice {
  id: AnswerChoiceID;
  cardID: NodeID;
  answer: string;
  correct: boolean;
}
export interface AnswerChoiceBriefEdit {
  id: AnswerChoiceID;
  answer: string;
  correct: boolean;
}
export interface AnswerChoiceBriefTest {
  id: AnswerChoiceID;
  answer: string;
}
export interface AnswerChoiceID {
  uuid: string;
}
export interface BlogCreate {
  subDomain: string;
}
export interface BlogPage {
  html: string;
}
export interface BlogPatch {
  theme?: string;
  name?: string;
  description?: string;
}
export interface Card {
  id: NodeID;
  mapID: string;
  flashcardTypeID: FlashcardTypeID;
  question: string;
  audio?: string;
  markdown: string;
  markdown_html: string;
}
export interface CardAnswer {
  correct: boolean;
  answer: string;
}
export interface CardBriefEdit {
  name: string;
  question: string;
  markdown: string;
  cardType: string;
  choices: AnswerChoiceBriefEdit[];
  audio?: string;
}
export interface CardBriefTest {
  name: string;
  question: string;
  markdown_html: string;
  cardType: string;
  choices: AnswerChoiceBriefTest[];
  radio: boolean;
  audio?: string;
}
export interface CardGradeAnswer {
  correct: boolean;
  answers?: AnswerChoice[];
  message?: string;
}
export interface CardMetaData {
  nodeID: string;
  parentID: string;
  segmentID: string;
  ef: number;
  lastAnswer: number;
  due: number;
  color: string;
  flashCardType: FlashcardTypeBrief;
}
export interface CardPost {
  flashcardTypeID: FlashcardTypeID;
  question: string;
  markdown: string;
  audioURL?: string;
  answers: CardAnswer[];
}
export interface CardsDue {
  cards: CardMetaData[];
  dueDates: [string, number][];
}
export interface CodeExerciseBriefEdit {
  cardType: string;
  name: string;
  explanation: string;
  template: string;
  test: string;
  solution: string;
}
export interface CodeExerciseBriefTest {
  cardType: string;
  name: string;
  explanation: string;
  template: string;
  test: string;
}
export interface Config {
  id: OrgID;
  blog: boolean;
  contests: boolean;
  defaultLanguage: string;
  mapDocumentationGeneration: boolean;
  marketingCampaigns: boolean;
  marketingEngagementCampaigns: boolean;
  problemBoard: boolean;
  salesAds: boolean;
  salesCertificates: boolean;
  salesCourses: boolean;
  salesFreeTrials: boolean;
  salesMemberFeesActive: boolean;
  salesMemberFeesStatic: boolean;
  salesMemberships: boolean;
  salesOrganizations: boolean;
  supportTier: number;
  trainingAnswerTimeTracking: boolean;
  trainingBreakTime: boolean;
  trainingComplianceEnforcement: boolean;
  trainingComments: boolean;
  trainingContentPageStudentSubmission: boolean;
  trainingContentPageTimeTracking: boolean;
  trainingContentPageUpvote: boolean;
  trainingCorrectAnswerAnimation: boolean;
  trainingCorrectAnswerSound: boolean;
  trainingFeedback: boolean;
  trainingLearningPaths: boolean;
  trainingMnemonics: boolean;
  trainingQuotes: boolean;
  trainingRankings: boolean;
  trainingReporting: boolean;
  trainingRewardsProgram: boolean;
  trainingSessionEndCelebration: boolean;
  trainingSessionEndFeedback: boolean;
  trainingStraightThruMode: boolean;
  trainingStudyGoals: boolean;
  trainingVirtualLabs: boolean;
  whiteLabeled: boolean;
  memberMonthlyCost: number;
  memberAnnualCost: number;
  memberPaymentMethodRequired: boolean;
}
export interface ConfigPatch {
  blog?: boolean;
  contests?: boolean;
  defaultLanguage?: string;
  mapDocumentationGeneration?: boolean;
  marketingCampaigns?: boolean;
  marketingEngagementCampaigns?: boolean;
  problemBoard?: boolean;
  salesAds?: boolean;
  salesCertificates?: boolean;
  salesCourses?: boolean;
  salesFreeTrials?: boolean;
  salesMemberFeesActive?: boolean;
  salesMemberFeesStatic?: boolean;
  salesMemberships?: boolean;
  salesOrganizations?: boolean;
  supportTier?: number;
  trainingAnswerTimeTracking?: boolean;
  trainingBreakTime?: boolean;
  trainingComplianceEnforcement?: boolean;
  trainingComments?: boolean;
  trainingContentPageStudentSubmission?: boolean;
  trainingContentPageTimeTracking?: boolean;
  trainingContentPageUpvote?: boolean;
  trainingCorrectAnswerAnimation?: boolean;
  trainingCorrectAnswerSound?: boolean;
  trainingFeedback?: boolean;
  trainingLearningPaths?: boolean;
  trainingMnemonics?: boolean;
  trainingQuotes?: boolean;
  trainingRankings?: boolean;
  trainingReporting?: boolean;
  trainingRewardsProgram?: boolean;
  trainingSessionEndCelebration?: boolean;
  trainingSessionEndFeedback?: boolean;
  trainingStraightThruMode?: boolean;
  trainingStudyGoals?: boolean;
  trainingVirtualLabs?: boolean;
  whiteLabeled?: boolean;
  memberMonthlyCost?: number;
  memberAnnualCost?: number;
  memberPaymentMethodRequired?: boolean;
}
export interface Exercise {
  flashcardTypeID: FlashcardTypeID;
  solution: string;
  test: string;
  explanation: string;
  template: string;
}
export interface ExerciseAnswer {
  code: string;
  seconds: number;
}
export interface ExerciseUpdate {
  solution: string;
  test: string;
  explanation: string;
  template: string;
}
export interface FlashcardTypeBrief {
  id: FlashcardTypeID;
  cardType: string;
  name: string;
  commonName: string;
  description?: string;
}
export interface MapProperties {
  name: string;
  mode: MapMode;
  description?: string;
  icon?: string;
  cost?: number;
}
export interface MapPropertiesPatch {
  name?: string;
  mode?: MapMode;
  icon?: string;
  description?: string;
  cost?: number;
}
export interface MapRights {
  id: MapRightsID;
  name: string;
  mapID: MapID;
  admin: boolean;
  feedback: boolean;
  mnemonics: boolean;
  modify: boolean;
  permissions: boolean;
  publish: boolean;
  share: boolean;
  stats: boolean;
  training: boolean;
  transfer: boolean;
  view: boolean;
}
export interface MapRightsInvite {
  emailAddress: string;
}
export interface MapRightsMembers {
  rights: MapRights;
  members: MemberProfile[];
}
export interface MapRightsPatch {
  admin?: boolean;
  feedback?: boolean;
  mnemonics?: boolean;
  modify?: boolean;
  permissions?: boolean;
  publish?: boolean;
  share?: boolean;
  stats?: boolean;
  training?: boolean;
  transfer?: boolean;
  view?: boolean;
  returnRights?: boolean;
}
export interface MapRightsPost {
  name: string;
  admin: boolean;
  feedback: boolean;
  mnemonics: boolean;
  modify: boolean;
  permissions: boolean;
  publish: boolean;
  share: boolean;
  stats: boolean;
  training: boolean;
  transfer: boolean;
  view: boolean;
}
export interface MemberOrgPermissions {
  blogApprove: boolean;
  blogCreate: boolean;
  blogDelete: boolean;
  blogPublish: boolean;
  manageBlog: boolean;
  manageContests: boolean;
  manageMarketingCampaigns: boolean;
  manageOrganizationBilling: boolean;
  manageOrganizationConfig: boolean;
  manageOrganizationMembers: boolean;
  manageOrganizationPermissions: boolean;
  manageOrganizationWhitelabel: boolean;
  manageRewardsProgram: boolean;
  manageSalesAds: boolean;
  manageSalesCertificates: boolean;
  manageSalesCourses: boolean;
  manageSalesMemberships: boolean;
  manageSalesOrganizations: boolean;
  manageTrainingBreakTime: boolean;
  manageTrainingComplianceEnforcement: boolean;
  manageTrainingQuotes: boolean;
  manageTrainingSessionSettings: boolean;
  manageProblemBoard: boolean;
  mapApprove: boolean;
  mapCreate: boolean;
  mapCreateDocuments: boolean;
  mapDirectory: boolean;
  mapFeedback: boolean;
  mapFork: boolean;
  mapMnemonics: boolean;
  mapModify: boolean;
  mapPermissions: boolean;
  mapPublish: boolean;
  mapShare: boolean;
  mapStats: boolean;
  mapTraining: boolean;
  mapTransfer: boolean;
  mapView: boolean;
  organizationInvite: boolean;
  organizationPublish: boolean;
  trainingRankings: boolean;
  trainingReporting: boolean;
}
export interface MemberProfile {
  id: ProfileID;
  firstName: string;
  lastName: string;
  avatarURL: string;
  enabled: boolean;
}
export interface MemberProfileEmail {
  profile: MemberProfile;
  email: string;
}
export interface MemberRegistration {
  firstName: string;
  lastName: string;
  idToken: string;
}
export interface MindMap {
  id: MapID;
  published: boolean;
  icon?: string;
  orgID: OrgID;
  name: string;
  mode: MapMode;
  description?: string;
  cost?: number;
  originMapID?: string;
  releaseVersion?: number;
}
export interface Node {
  id: NodeID;
  nodeNumber: number;
  parentID?: NodeID;
  mapID: MapID;
  segmentID: SegmentID;
  path: string;
  order: number;
  name: string;
  type: string;
  root?: number;
  disabled: boolean;
  publishedID?: string;
}
export interface NodeCardPostInfo {
  node: Node;
  card?: Card;
  post?: Post;
}
export interface NodePatch {
  nodeNumber?: number;
  parentID?: NodeID;
  order?: number;
  name?: string;
  nodeType?: string;
  disabled?: boolean;
  returnNode?: boolean;
}
export interface NodePatchAttributes {
  collapsed?: boolean;
}
export interface NodePost {
  nodeNumber: number;
  parentID: NodeID;
  order: number;
  name: string;
  nodeType: string;
}
export interface OrgLink {
  name: string;
  orgID: OrgID;
  internal: boolean;
  payPerCourse: boolean;
}
export interface Post {
  id: NodeID;
  mapID: MapID;
  markdown: string;
  html: string;
}
export interface PostMarkdown {
  markdown: string;
}
export interface PostTimeRead {
  postID: string;
  timeRead: number;
}
export interface Quality {
  quality: number;
}
export interface Role {
  id: RoleID;
  orgID: OrgID;
  roleName: string;
  autoJoin: boolean;
  blogApprove: boolean;
  blogCreate: boolean;
  blogDelete: boolean;
  blogPublish: boolean;
  manageBlog: boolean;
  manageContests: boolean;
  manageMarketingCampaigns: boolean;
  manageOrganizationBilling: boolean;
  manageOrganizationConfig: boolean;
  manageOrganizationMembers: boolean;
  manageOrganizationPermissions: boolean;
  manageOrganizationWhitelabel: boolean;
  manageRewardsProgram: boolean;
  manageSalesAds: boolean;
  manageSalesCertificates: boolean;
  manageSalesCourses: boolean;
  manageSalesMemberships: boolean;
  manageSalesOrganizations: boolean;
  manageTrainingBreakTime: boolean;
  manageTrainingComplianceEnforcement: boolean;
  manageTrainingQuotes: boolean;
  manageTrainingSessionSettings: boolean;
  manageProblemBoard: boolean;
  mapApprove: boolean;
  mapCreate: boolean;
  mapCreateDocuments: boolean;
  mapDirectory: boolean;
  mapFeedback: boolean;
  mapFork: boolean;
  mapMnemonics: boolean;
  mapModify: boolean;
  mapPermissions: boolean;
  mapPublish: boolean;
  mapShare: boolean;
  mapStats: boolean;
  mapTraining: boolean;
  mapTransfer: boolean;
  mapView: boolean;
  organizationInvite: boolean;
  organizationPublish: boolean;
  trainingRankings: boolean;
  trainingReporting: boolean;
}
export interface RoleInviteRequest {
  emailAddress: string;
  mapRightsID?: MapRightsID;
}
export interface RoleInviteResponse {
  status: number;
  inviteID?: RoleInviteID;
}
export interface Site {
  id: SiteID;
  orgID: string;
  domain: string;
  theme: string;
  ssl: boolean;
  name: string;
  title: string;
  description: string;
  logo: string;
  favicon: string;
}
export interface SiteID {
  uuid: string;
}
export interface TestAnswer {
  choices: string[];
  seconds: number;
}
export interface UserCode {
  code: string;
}
export type MapID = string;
export type MapMode = ('MAP' | 'LIST' | 'DOCUMENT');
export type MapRightsID = string;
export type NodeID = string;
export type OrgID = string;
export type ProfileID = string;
export type RoleID = string;
export type RoleInviteID = string;
export type SegmentID = string;
