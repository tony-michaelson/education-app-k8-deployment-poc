# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
play.allowGlobalApplication=false

play.http.errorHandler = utils.JsonHttpErrorHandler

play.filters.enabled += "play.filters.headers.SecurityHeadersFilter"
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.csp.CSPFilter = ""
play.filters.headers.frameOptions = ""
play.filters.headers.permittedCrossDomainPolicies = ${?CLIENT_URL}
play.filters.cors.allowedOrigins = [${?CLIENT_URL}]

websocket.headers.allowedOrigin = ${?AUTH0_REDIRECT_URL}

slick.dbs.default.profile="slick.jdbc.PostgresProfile$"
slick.dbs.default.db.driver="org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://"${?POSTGRES_HOST}":"${?POSTGRES_PORT}"/masterypath"
slick.dbs.default.db.user=${?POSTGRES_USER}
slick.dbs.default.db.password=${?POSTGRES_PASSWORD}

siteUrl = ${?AUTH0_REDIRECT_URL}
clientUrl = ${?CLIENT_URL}

auth0 {
  domain = ${?AUTH0_DOMAIN}
  audience = ${?AUTH0_AUDIENCE}
}

sendgrid {
  apiKey=${?SENDGRID_APIKEY}
}

googleCloud {
  projectID=${?GCS_PROJECT_ID}
  imageBucket=${?GCS_IMAGE_BUCKET}
  audioBucket=${?GCS_AUDIO_BUCKET}
  maxImageHeight=400
  maxImageWidth=750
}

digitalOcean {
  doAccessKey=${?DO_ACCESS_KEY}
  doSecretKey=${?DO_SECRET_KEY}
  imageSpaceEndpoint=${?DO_IMAGE_SPACE_ENDPOINT}
  imageSpaceName=${?DO_IMAGE_SPACE_NAME}
  audioSpaceEndpoint=${?DO_AUDIO_SPACE_ENDPOINT}
  audioSpaceName=${?DO_AUDIO_SPACE_NAME}
}

certbotService {
  domain = ${?SITES_DOMAIN}
  url = "http://certbot:8080"
}

jekyllService {
  url = "http://jekyll:8080"
}

dockerService {
  url = "http://dind:8080"
}

play.http.secret.key="jCZVdb^e9uR$@7@SF@&%h9BCbdG98FiA"

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.http.filters = "utils.Filters"

# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off
}

# Security Filter Configuration - Content Security Policy
//play.filters.headers {
//  contentSecurityPolicy = "default-src 'self';"
//  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
//  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
//  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
//  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
//  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
//}