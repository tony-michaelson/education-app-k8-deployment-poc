variables:
  VERSION: "1.4"
  IMAGE_NAME: service-dind

image-build-job:
  stage: build
  image:
    name: code.solern.com:5050/masterypath/devops-build-container:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  only:
    - master@masterypath/service-dind
    - production@masterypath/service-dind
  script:
    - docker info
    - doctl auth init --access-token ${DOCTL_TOKEN}
    - doctl registry login
    - export IMAGE_TAG="masterypath/${IMAGE_NAME}"
    - docker build --build-arg VERSION=${VERSION} -t $IMAGE_TAG .
    - docker login -u $GITLAB_DOCKER_USERNAME -p $GITLAB_DOCKER_ACCESS_TOKEN code.solern.com:5050
    - docker tag $IMAGE_TAG code.solern.com:5050/${IMAGE_TAG}:latest
    - docker tag $IMAGE_TAG code.solern.com:5050/${IMAGE_TAG}:$VERSION
    - docker push code.solern.com:5050/${IMAGE_TAG}
    - docker tag $IMAGE_TAG registry.digitalocean.com/${IMAGE_TAG}:latest
    - docker tag $IMAGE_TAG registry.digitalocean.com/${IMAGE_TAG}:$VERSION
    - docker push registry.digitalocean.com/${IMAGE_TAG}

staging-deploy-job:
  stage: deploy
  dependencies:
    - image-build-job
  image:
    name: code.solern.com:5050/masterypath/devops-build-container:latest
  variables:
    PROD_OR_STAGING: staging
  only:
    - master@masterypath/service-dind
  script:
    - doctl auth init --access-token ${DOCTL_TOKEN}
    - doctl kubernetes cluster kubeconfig save ${PROD_OR_STAGING}
    - cd deployment/${PROD_OR_STAGING}
    - cat dind-deployment.yml.template | sed "s/{{VERSION}}/${VERSION}/g" > dind-deployment.yml
    - kubectl apply -f dind-service.yml
    - kubectl apply -f dind-deployment.yml