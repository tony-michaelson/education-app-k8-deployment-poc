variables:
  IMAGE_NAME: service-mq

image-build-job:
  stage: build
  image:
    name: code.solern.com:5050/masterypath/devops-build-container:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  only:
    - master@masterypath/service-mq
    - production@masterypath/service-mq
  script:
    - source VERSION.env
    - docker info
    - doctl auth init --access-token ${DOCTL_TOKEN}
    - doctl registry login
    - export IMAGE_TAG="masterypath/${IMAGE_NAME}"
    - docker build --build-arg VERSION=${CURRENT_VERSION} -t ${IMAGE_TAG} .
    - docker login -u $GITLAB_DOCKER_USERNAME -p $GITLAB_DOCKER_ACCESS_TOKEN code.solern.com:5050
    - docker tag ${IMAGE_TAG} code.solern.com:5050/${IMAGE_TAG}:latest
    - docker tag ${IMAGE_TAG} code.solern.com:5050/${IMAGE_TAG}:$CURRENT_VERSION
    - docker push code.solern.com:5050/${IMAGE_TAG}:latest
    - docker push code.solern.com:5050/${IMAGE_TAG}:$CURRENT_VERSION
    - docker tag ${IMAGE_TAG} registry.digitalocean.com/${IMAGE_TAG}:latest
    - docker tag ${IMAGE_TAG} registry.digitalocean.com/${IMAGE_TAG}:$CURRENT_VERSION
    - docker push registry.digitalocean.com/${IMAGE_TAG}

staging-deploy-job:
  stage: deploy
  dependencies:
    - image-build-job
  image:
    name: code.solern.com:5050/masterypath/devops-build-container:latest
  variables:
    PROD_OR_STAGING: staging
  only:
    - master@masterypath/service-mq
  script:
    - source VERSION.env
    - doctl auth init --access-token ${DOCTL_TOKEN}
    - doctl kubernetes cluster kubeconfig save ${PROD_OR_STAGING}
    - cd deployment/${PROD_OR_STAGING}
    - cat ${SERVICE_NAME}-deployment.yml.template | sed "s/{{VERSION}}/${CURRENT_VERSION}/g" > ${SERVICE_NAME}-deployment.yml
    - kubectl apply -f ${SERVICE_NAME}-service.yml
    - kubectl apply -f ${SERVICE_NAME}-deployment.yml